new g_var4558;
new g_var43d0;
public actionCfgMenu(_arg0, _arg1)
{
	switch (_arg1)
	{
		case 7:
		{
			if (sub_2e9c(17496))
			{
				g_var4558 = 0;
				client_print(_arg0, "", "* %L", _arg0, "STATS_CONF_SAVED");
			}
			else
			{
				client_print(_arg0, "", "* %L", _arg0, "STATS_CONF_FAILED");
			}
			sub_2234(_arg0, 17364[_arg0]);
		}
		case 8:
		{
			new var2 = 17364[_arg0];
			var2++;
			sub_2234(_arg0, var2);
		}
		case 9:
		{
			new var1 = 17364[_arg0];
			var1--;
			sub_2234(_arg0, var1);
		}
		default:
		{
			g_var4558 = 1;
			new var3;
			var3 = _arg1 + 17364[_arg0] * 7;
			set_xvar_num(17104[var3], 1 - get_xvar_num(17104[var3]));
			sub_2234(_arg0, 17364[_arg0]);
		}
	}
	return 1;
}

public cmdCfg(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 1))
	{
		return 1;
	}
	new var7 = 0;
	read_argv(1, var7, "");
	new var8;
	new var1;
	if (equali(var7, "on", "1.00"))
	{
		var1 = 1;
	}
	else
	{
		var1 = 0;
	}
	var8 = var1;
	if (!var8)
	{
		new var2;
		if (equali(var7, "off", "1.00"))
		{
			var2 = 2;
		}
		else
		{
			var2 = 0;
		}
		var8 = var2;
	}
	new var3;
	if (read_argc() > 2 && var8)
	{
		new var9 = 0;
		new var10 = 0;
		read_argv(2, var9, "");
		new var11 = 0;
		while (var11 < g_var43d0)
		{
			if (containi(8656[var11], var9) != -1)
			{
				g_var4558 = 1;
				var10++;
				if (var8 == 1)
				{
					set_xvar_num(17104[var11], 1);
					console_print(_arg0, "%L: %s", _arg0, "STATS_ENABLED", 208[var11]);
				}
				set_xvar_num(17104[var11], "1.00");
				console_print(_arg0, "%L: %s", _arg0, "STATS_DISABLED", 208[var11]);
			}
			var11++;
		}
		if (var10)
		{
			console_print(_arg0, "%L", _arg0, "TOTAL_NUM", var10);
		}
		else
		{
			console_print(_arg0, "%L", _arg0, "NO_OPTION", var9);
		}
	}
	else
	{
		if (equali(var7, "save", "1.00"))
		{
			if (sub_2e9c(17496))
			{
				g_var4558 = 0;
				console_print(_arg0, "%L", _arg0, "STATS_CONF_SAVED");
			}
			else
			{
				console_print(_arg0, "%L", _arg0, "STATS_CONF_FAILED");
			}
		}
		if (equali(var7, "load", "1.00"))
		{
			if (sub_31a4(17496))
			{
				g_var4558 = 0;
				console_print(_arg0, "%L", _arg0, "STATS_CONF_LOADED");
			}
			else
			{
				console_print(_arg0, "%L", _arg0, "STATS_CONF_FAIL_LOAD");
			}
		}
		if (equali(var7, "list", "1.00"))
		{
			new var12 = 0;
			new var13;
			new var4;
			if (read_argv(2, var12, 7))
			{
				var4 = str_to_num(var12);
			}
			else
			{
				var4 = 1;
			}
			var13 = var4;
			var13--;
			if (0 > var13)
			{
				var13 = 0;
			}
			if (var13 >= g_var43d0)
			{
				var13 = g_var43d0 + -1;
			}
			new var14;
			var14 = var13 + 10;
			if (var14 > g_var43d0)
			{
				var14 = g_var43d0;
			}
			new var15 = 0;
			new var16 = 0;
			new var17 = 0;
			format(var15, 15, "%L", _arg0, "NAME");
			format(var16, 15, "%L", _arg0, "VARIABLE");
			format(var17, 15, "%L", _arg0, "STATUS");
			console_print(_arg0, "\n----- %L: -----", _arg0, "STATS_CONF");
			console_print(_arg0, "     %-29.28s   %-24.23s   %-9.8s", var15, var16, var17);
			if (var13 != -1)
			{
				new var18 = 0;
				new var19;
				var19 = var13;
				while (var19 < var14)
				{
					new var5;
					if (get_xvar_num(17104[var19]))
					{
						var5 = 19760;
					}
					else
					{
						var5 = 19772;
					}
					format(var18, 15, "%L", _arg0, var5);
					console_print(_arg0, "%3d: %-29.28s   %-24.23s   %-9.8s", var19 + 1, 208[var19], 8656[var19], var18);
					var19++;
				}
			}
			console_print(_arg0, "----- %L -----", _arg0, "STATS_ENTRIES_OF", var13 + 1, var14, g_var43d0);
			if (var14 < g_var43d0)
			{
				console_print(_arg0, "----- %L -----", _arg0, "STATS_USE_MORE", var14 + 1);
			}
			else
			{
				console_print(_arg0, "----- %L -----", _arg0, "STATS_USE_BEGIN");
			}
		}
		new var6;
		if (equali(var7, "add", "1.00") && read_argc() > 3)
		{
			if (g_var43d0 < 64)
			{
				read_argv(2, 208[g_var43d0], "");
				read_argv("", 8656[g_var43d0], "");
				17104[g_var43d0] = get_xvar_id(8656[g_var43d0]);
				g_var43d0 += 1;
			}
			else
			{
				console_print(_arg0, "%L", _arg0, "CANT_ADD_STATS");
			}
		}
		console_print(_arg0, "%L", _arg0, "COM_STATS_USAGE");
		console_print(_arg0, "%L", _arg0, "COM_STATS_COM");
		console_print(_arg0, "%L", _arg0, "COM_STATS_ON");
		console_print(_arg0, "%L", _arg0, "COM_STATS_OFF");
		console_print(_arg0, "%L", _arg0, "COM_STATS_SAVE");
		console_print(_arg0, "%L", _arg0, "COM_STATS_LOAD");
		console_print(_arg0, "%L", _arg0, "COM_STATS_LIST");
		console_print(_arg0, "%L", _arg0, "COM_STATS_ADD");
	}
	return 1;
}

public cmdCfgMenu(_arg0, _arg1, _arg2)
{
	if (sub_230(_arg0, _arg1, _arg2, 1))
	{
		17364[_arg0] = 0;
		sub_2234(_arg0, 0);
	}
	return 1;
}

public plugin_init()
{
	register_plugin("Stats Configuration", "1.00", "AMXX Dev Team");
	register_menucmd(register_menuid("Stats Configuration", "1.00"), 1023, "actionCfgMenu");
	sub_6d8(17496, 63);
	format(17496, 63, "%s/stats.ini", 17496);
	sub_31a4(17496);
	return 0;
}

public plugin_precache()
{
	register_clcmd("amx_statscfgmenu", "cmdCfgMenu", 128, "- displays stats configuration menu");
	register_dictionary("statscfg.txt");
	register_dictionary("common.txt");
	register_concmd("amx_statscfg", "cmdCfg", 128, "- displays help for stats configuration");
	return 0;
}

sub_2e9c(_arg0)
{
	if (file_exists(_arg0))
	{
		delete_file(_arg0);
	}
	if (!write_file(_arg0, ";Generated by Stats Configuration Plugin. Do not modify!\n;Variable  Description", -1))
	{
		return 0;
	}
	new var1 = 0;
	new var2 = 0;
	while (var2 < g_var43d0)
	{
		if (get_xvar_num(17104[var2]))
		{
			format(var1, 255, "%-24.23s ;%s", 8656[var2], 208[var2]);
			write_file(_arg0, var1, -1);
		}
		var2++;
	}
	return 1;
}

sub_2234(_arg0, _arg1)
{
	if (0 > _arg1)
	{
		return 0;
	}
	new var6 = 0;
	new var7;
	var7 = _arg1 * 7;
	if (var7 >= g_var43d0)
	{
		17364[_arg0] = 0;
		_arg1 = 0;
		var7 = 0;
	}
	new var8;
	new var1;
	if (g_var43d0 % 7)
	{
		var1 = 1;
	}
	else
	{
		var1 = 0;
	}
	var8 = format(var6, 511, "\y%L\R%d/%d\n\w\n", _arg0, "STATS_CONF", _arg1 + 1, var1 + g_var43d0 / 7);
	new var9;
	var9 = var7 + 7;
	new var10 = 640;
	new var11 = 0;
	if (var9 > g_var43d0)
	{
		var9 = g_var43d0;
	}
	new var12;
	var12 = var7;
	while (var12 < var9)
	{
		var10 = 1 << var11 | var10;
		new var2;
		if (get_xvar_num(17104[var12]))
		{
			var2 = 21116;
		}
		else
		{
			var2 = 21128;
		}
		var11++;
		var8 = format(var6[var8], 511 - var8, "%d. %s\y\R%L\n\w", var11, 208[var12], _arg0, var2) + var8;
		var12++;
	}
	if (g_var43d0 == 0)
	{
		var8 = format(var6[var8], 511 - var8, "\d%L\w", _arg0, "NO_STATS") + var8;
	}
	new var3;
	if (g_var4558)
	{
		var3 = 21312;
	}
	else
	{
		var3 = 21320;
	}
	var8 = format(var6[var8], 511 - var8, "\n8. %L\y\R%s\n\w", _arg0, "SAVE_CONF", var3) + var8;
	if (g_var43d0 != var9)
	{
		new var4;
		if (_arg1)
		{
			var4 = 21408;
		}
		else
		{
			var4 = 21428;
		}
		format(var6[var8], 511 - var8, "\n9. %L...\n0. %L", _arg0, "MORE", _arg0, var4);
		var10 |= 256;
	}
	else
	{
		new var5;
		if (_arg1)
		{
			var5 = 21476;
		}
		else
		{
			var5 = 21496;
		}
		format(var6[var8], 511 - var8, "\n0. %L", _arg0, var5);
	}
	show_menu(_arg0, var10, var6, -1, "Stats Configuration");
	return 0;
}

sub_230(_arg0, _arg1, _arg2, _arg3)
{
	new var2 = 0;
	new var1;
	if (is_dedicated_server())
	{
		var1 = 0;
	}
	else
	{
		var1 = 1;
	}
	if (var1 == _arg0)
	{
		var2 = 1;
	}
	else
	{
		if (_arg1 == 16777216)
		{
			if (sub_150(_arg0))
			{
				var2 = 1;
			}
		}
		if (_arg1 & get_user_flags(_arg0, "1.00"))
		{
			var2 = 1;
		}
		if (_arg1 == 0)
		{
			var2 = 1;
		}
	}
	if (var2 == 0)
	{
		console_print(_arg0, "%L", _arg0, "NO_ACC_COM");
		return 0;
	}
	if (_arg3 > read_argc())
	{
		new var3 = 0;
		new var4 = 0;
		get_concmd(_arg2, var3, "", _unused_temp_, var4, 127, _arg1, -1);
		console_print(_arg0, "%L:  %s %s", _arg0, "USAGE", var3, var4);
		return 0;
	}
	return 1;
}

sub_31a4(_arg0)
{
	if (!file_exists(_arg0))
	{
		return 0;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	new var4 = 0;
	var3++;
	while (read_file(_arg0, var3, var1, 255, _unused_temp_))
	{
		if (!(var1 == 59))
		{
			parse(var1, var2, 31);
			if ((var4 = get_xvar_id(var2)) != -1)
			{
				set_xvar_num(var4, 1);
			}
		}
	}
	return 1;
}

sub_6d8(_arg0, _arg1)
{
	return get_localinfo("amxx_configsdir", _arg0, _arg1);
}

sub_150(_arg0)
{
	new var1;
	return get_user_flags(_arg0, "1.00") > 0 && !get_user_flags(_arg0, "1.00") & 33554432;
}

