new g_vara48;
new g_vara54;
new g_vara50;
new g_vara4c;
public chMap(_arg0)
{
	server_cmd("changelevel %s", _arg0);
	return 0;
}

public cmdAddBan(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, ""))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	read_argv(1, var1, "");
	read_argv(2, var4, "");
	read_argv("", var5, "");
	if (contain(var1, 7696) != -1)
	{
		server_cmd("addip \"%s\" \"%s\";wait;writeip", var4, var1);
		console_print(_arg0, "[AMXX] Ip \"%s\" added to ban list", var1);
	}
	else
	{
		server_cmd("banid \"%s\" \"%s\";wait;writeid", var4, var1);
		console_print(_arg0, "[AMXX] Authid \"%s\" added to ban list", var1);
	}
	get_user_name(_arg0, var3, "");
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_ADDBAN_1", var1);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_ADDBAN_2", var3, var1);
		}
		default:
		{
		}
	}
	get_user_authid(_arg0, var2, "");
	log_amx("Cmd: \"%s<%d><%s><>\" ban \"%s\" (minutes \"%s\") (reason \"%s\")", var3, get_user_userid(_arg0), var2, var1, var4, var5);
	return 1;
}

public cmdBan(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, ""))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	read_argv(1, var1, "");
	read_argv(2, var2, 7);
	read_argv("", var3, 63);
	new var4;
	var4 = sub_6d4(_arg0, var1, 9);
	if (!var4)
	{
		return 1;
	}
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	new var8 = 0;
	new var9;
	var9 = get_user_userid(var4);
	get_user_authid(var4, var7, "");
	get_user_authid(_arg0, var5, "");
	get_user_name(var4, var6, "");
	get_user_name(_arg0, var8, "");
	var9 = get_user_userid(var4);
	log_amx("Ban: \"%s<%d><%s><>\" ban and kick \"%s<%d><%s><>\" (minutes \"%s\") (reason \"%s\")", var8, get_user_userid(_arg0), var5, var6, var9, var7, var2, var3);
	new var10 = 0;
	new var11 = 0;
	new var12;
	var12 = str_to_num(var2);
	if (var12)
	{
		format(var10, 63, "%L", var4, "FOR_MIN", var2);
	}
	else
	{
		format(var10, 63, "%L", var4, "PERM");
	}
	format(var11, 15, "%L", var4, "BANNED");
	if (var3)
	{
		server_cmd("kick #%d \"%s (%s %s)\";wait;banid \"%s\" \"%s\";wait;writeid", var9, var3, var11, var10, var2, var7);
	}
	else
	{
		server_cmd("kick #%d \"%s %s\";wait;banid \"%s\" \"%s\";wait;writeid", var9, var11, var10, var2, var7);
	}
	new var13;
	var13 = get_cvar_num("amx_show_activity");
	if (var13 != 0)
	{
		new var14 = 0;
		new var15 = 0;
		new var16 = 0;
		new var17 = 0;
		get_players(var14, var15, 9588, 9596);
		new var18 = 0;
		while (var18 < var15)
		{
			var17 = format(var16, 255, "%L", var14[var18], "ADMIN");
			if (var13 == 1)
			{
				var17 = copy(var16[var17], 255 - var17, 9636) + var17;
			}
			else
			{
				var17 = format(var16[var17], 255 - var17, " %s:", var8) + var17;
			}
			var17 = format(var16[var17], 255 - var17, " %L", var14[var18], "BAN") + var17;
			var17 = format(var16[var17], 255 - var17, " %s ", var6) + var17;
			if (var12)
			{
				format(var16[var17], 255 - var17, "%L", var14[var18], "FOR_MIN", var2);
			}
			else
			{
				format(var16[var17], 255 - var17, "%L", var14[var18], "PERM");
			}
			client_print(var14[var18], "", var16);
			var18++;
		}
	}
	console_print(_arg0, "[AMXX] %L", _arg0, "CLIENT_BANNED", var6);
	return 1;
}

public cmdBanIP(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, ""))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	read_argv(1, var1, "");
	read_argv(2, var2, 7);
	read_argv("", var3, 63);
	new var4;
	var4 = sub_6d4(_arg0, var1, 9);
	if (!var4)
	{
		return 1;
	}
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	new var8 = 0;
	new var9;
	var9 = get_user_userid(var4);
	get_user_authid(var4, var7, "");
	get_user_authid(_arg0, var5, "");
	get_user_name(var4, var6, "");
	get_user_name(_arg0, var8, "");
	var9 = get_user_userid(var4);
	log_amx("Ban: \"%s<%d><%s><>\" ban and kick \"%s<%d><%s><>\" (minutes \"%s\") (reason \"%s\")", var8, get_user_userid(_arg0), var5, var6, var9, var7, var2, var3);
	new var10 = 0;
	new var11 = 0;
	new var12;
	var12 = str_to_num(var2);
	if (var12)
	{
		format(var10, 63, "%L", var4, "FOR_MIN", var2);
	}
	else
	{
		format(var10, 63, "%L", var4, "PERM");
	}
	format(var11, 15, "%L", var4, "BANNED");
	new var13 = 0;
	get_user_ip(var4, var13, "", 1);
	if (var3)
	{
		server_cmd("kick #%d \"%s (%s %s)\";wait;addip \"%s\" \"%s\";wait;writeip", var9, var3, var11, var10, var2, var13);
	}
	else
	{
		server_cmd("kick #%d \"%s %s\";wait;addip \"%s\" \"%s\";wait;writeip", var9, var11, var10, var2, var13);
	}
	new var14;
	var14 = get_cvar_num("amx_show_activity");
	if (var14 != 0)
	{
		new var15 = 0;
		new var16 = 0;
		new var17 = 0;
		new var18 = 0;
		get_players(var15, var16, 10812, 9596);
		new var19 = 0;
		while (var19 < var16)
		{
			var18 = format(var17, 255, "%L", var15[var19], "ADMIN");
			if (var14 == 1)
			{
				var18 = copy(var17[var18], 255 - var18, 10856) + var18;
			}
			else
			{
				var18 = format(var17[var18], 255 - var18, " %s:", var8) + var18;
			}
			var18 = format(var17[var18], 255 - var18, " %L", var15[var19], "BAN") + var18;
			var18 = format(var17[var18], 255 - var18, " %s ", var6) + var18;
			if (var12)
			{
				format(var17[var18], 255 - var18, "%L", var15[var19], "FOR_MIN", var2);
			}
			else
			{
				format(var17[var18], 255 - var18, "%L", var15[var19], "PERM");
			}
			client_print(var15[var19], "", var17);
			var19++;
		}
	}
	console_print(_arg0, "[AMXX] %L", _arg0, "CLIENT_BANNED", var6);
	return 1;
}

public cmdCfg(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var1 = 0;
	read_argv(1, var1, 127);
	if (!file_exists(var1))
	{
		console_print(_arg0, "[AMXX] %L", _arg0, "FILE_NOT_FOUND", var1);
		return 1;
	}
	new var2 = 0;
	new var3 = 0;
	get_user_authid(_arg0, var2, "");
	get_user_name(_arg0, var3, "");
	log_amx("Cmd: \"%s<%d><%s><>\" execute cfg (file \"%s\")", var3, get_user_userid(_arg0), var2, var1);
	console_print(_arg0, "[AMXX] Executing file \"%s\"", var1);
	server_cmd("exec %s", var1);
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_CONF_1", var1);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_CONF_2", var3, var1);
		}
		default:
		{
		}
	}
	return 1;
}

public cmdCvar(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var5 = 0;
	new var6 = 0;
	read_argv(1, var5, "");
	read_argv(2, var6, 63);
	new var1;
	if (equal(var5, "add", "1.00") && get_user_flags(_arg0, "1.00") & 2048)
	{
		if (cvar_exists(var6))
		{
			if (g_vara48 < 16)
			{
				g_vara48 += 1;
				copy(520[g_vara48], "", var6);
			}
			console_print(_arg0, "[AMXX] %L", _arg0, "NO_MORE_CVARS");
		}
		return 1;
	}
	if (!cvar_exists(var5))
	{
		console_print(_arg0, "[AMXX] %L", _arg0, "UNKNOWN_CVAR", var5);
		return 1;
	}
	new var2;
	if (sub_602c(var5) && !get_user_flags(_arg0, "1.00") & 2048)
	{
		console_print(_arg0, "[AMXX] %L", _arg0, "CVAR_NO_ACC");
		return 1;
	}
	new var3;
	if (equal(var5, "sv_password", "1.00") && !get_user_flags(_arg0, "1.00") & 1024)
	{
		console_print(_arg0, "[AMXX] %L", _arg0, "CVAR_NO_ACC");
		return 1;
	}
	if (3 > read_argc())
	{
		get_cvar_string(var5, var6, 63);
		console_print(_arg0, "[AMXX] %L", _arg0, "CVAR_IS", var5, var6);
		return 1;
	}
	new var7 = 0;
	new var8 = 0;
	get_user_authid(_arg0, var7, "");
	get_user_name(_arg0, var8, "");
	log_amx("Cmd: \"%s<%d><%s><>\" set cvar (name \"%s\") (value \"%s\")", var8, get_user_userid(_arg0), var7, var5, var6);
	set_cvar_string(var5, var6);
	new var9;
	var9 = get_cvar_num("amx_show_activity");
	if (var9 != 0)
	{
		new var10 = 0;
		new var11 = 0;
		new var12 = 0;
		new var13 = 0;
		new var14 = 0;
		get_players(var10, var11, 13416, 9596);
		new var15 = 0;
		while (var15 < var11)
		{
			var14 = format(var12, 255, "%L", var10[var15], "ADMIN");
			if (var9 == 1)
			{
				var14 = copy(var12[var14], 255 - var14, 13460) + var14;
			}
			else
			{
				var14 = format(var12[var14], 255 - var14, " %s:", var8) + var14;
			}
			new var4;
			if (equal(var5, "rcon_password", "1.00") || equal(var5, "sv_password", "1.00"))
			{
				format(var13, 63, "*** %L ***", var10[var15], "PROTECTED");
			}
			else
			{
				copy(var13, 63, var6);
			}
			client_print(var10[var15], "", "%L", var10[var15], "SET_CVAR_TO", var12, var5, var6);
			var15++;
		}
	}
	console_print(_arg0, "[AMXX] %L", _arg0, "CVAR_CHANGED", var5, var6);
	return 1;
}

public cmdKick(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var1 = 0;
	read_argv(1, var1, "");
	new var2;
	var2 = sub_6d4(_arg0, var1, 1);
	if (!var2)
	{
		return 1;
	}
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	new var8 = 0;
	get_user_authid(_arg0, var3, "");
	get_user_authid(var2, var4, "");
	get_user_name(var2, var5, "");
	get_user_name(_arg0, var6, "");
	var7 = get_user_userid(var2);
	read_argv(2, var8, "");
	remove_quotes(var8);
	log_amx("Kick: \"%s<%d><%s><>\" kick \"%s<%d><%s><>\" (reason \"%s\")", var6, get_user_userid(_arg0), var3, var5, var7, var4, var8);
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_KICK_1", var5);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_KICK_2", var6, var5);
		}
		default:
		{
		}
	}
	if (is_user_bot(var2))
	{
		server_cmd("kick #%d", var7);
	}
	else
	{
		if (var8)
		{
			server_cmd("kick #%d \"%s\"", var7, var8);
		}
		server_cmd("kick #%d", var7);
	}
	console_print(_arg0, "[AMXX] Client \"%s\" kicked", var5);
	return 1;
}

public cmdLBack()
{
	new var2 = 0;
	new var1;
	if (g_vara54)
	{
		var1 = 15648;
	}
	else
	{
		var1 = 15684;
	}
	format(var2, 15, "%L", g_vara4c, var1);
	set_cvar_float("pausable", g_vara50);
	console_print(g_vara4c, "[AMXX] Server %s", var2);
	if (g_vara54)
	{
		g_vara54 = 0;
	}
	else
	{
		g_vara54 = 1;
	}
	return 1;
}

public cmdLeave(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var2;
	var2 = read_argc();
	new var3 = 0;
	new var4 = 0;
	new var5 = 1;
	while (var5 < 5)
	{
		if (var5 < var2)
		{
			var4++;
			read_argv(var5, var3[var4], "");
		}
		else
		{
			var4++;
			var3[var4] = 0;
		}
		var5++;
	}
	new var6 = 0;
	new var7 = 0;
	new var8;
	var8 = get_maxplayers() + 1;
	new var9 = 0;
	new var10 = 0;
	new var11 = 1;
	while (var11 < var8)
	{
		new var1;
		if (!is_user_connected(var11) && !is_user_connecting(var11))
		{
		}
		else
		{
			get_user_name(var11, var6, "");
			var7 = sub_9e70(var6, var3, var4);
			if (var7 != -1)
			{
				console_print(_arg0, 18464, _arg0, "SKIP_MATCH", var6, var3[var7]);
			}
			if (get_user_flags(var11, "1.00") & 1)
			{
				console_print(_arg0, "[AMXX] %L", _arg0, "SKIP_IMM", var6);
			}
			console_print(_arg0, "[AMXX] %L", _arg0, "KICK_PL", var6);
			if (is_user_bot(var11))
			{
				server_cmd("kick #%d", get_user_userid(var11));
			}
			else
			{
				format(var10, 127, "%L", var11, "YOU_DROPPED");
				server_cmd("kick #%d \"%s\"", get_user_userid(var11), var10);
			}
			var9++;
		}
		var11++;
	}
	console_print(_arg0, "[AMXX] %L", _arg0, "KICKED_CLIENTS", var9);
	new var12 = 0;
	new var13 = 0;
	get_user_authid(_arg0, var12, "");
	get_user_name(_arg0, var13, "");
	new var14 = var3 + 12;
	new var15 = var3 + 8;
	new var16 = var3 + 4;
	log_amx("Kick: \"%s<%d><%s><>\" leave some group (tag1 \"%s\") (tag2 \"%s\") (tag3 \"%s\") (tag4 \"%s\")", var13, get_user_userid(_arg0), var12, var3 + var3, var16 + var16, var15 + var15, var14 + var14);
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			new var20 = var3 + 12;
			new var21 = var3 + 8;
			new var22 = var3 + 4;
			client_print("1.00", "", "%L", -1, "ADMIN_LEAVE_1", var3 + var3, var22 + var22, var21 + var21, var20 + var20);
		}
		case 2:
		{
			new var17 = var3 + 12;
			new var18 = var3 + 8;
			new var19 = var3 + 4;
			client_print("1.00", "", "%L", -1, "ADMIN_LEAVE_2", var13, var3 + var3, var19 + var19, var18 + var18, var17 + var17);
		}
		default:
		{
		}
	}
	return 1;
}

public cmdMap(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var1 = 0;
	new var2;
	var2 = read_argv(1, var1, "");
	if (!is_map_valid(var1))
	{
		console_print(_arg0, "[AMXX] %L", _arg0, "MAP_NOT_FOUND");
		return 1;
	}
	new var3 = 0;
	new var4 = 0;
	get_user_authid(_arg0, var3, "");
	get_user_name(_arg0, var4, "");
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_MAP_1", var1);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_MAP_2", var4, var1);
		}
		default:
		{
		}
	}
	log_amx("Cmd: \"%s<%d><%s><>\" changelevel \"%s\"", var4, get_user_userid(_arg0), var3, var1);
	new var5 = 0;
	get_modname(var5, 9);
	if (!equal(var5, "zp", "1.00"))
	{
		message_begin(2, 30, {0,0,0}, "1.00");
		message_end();
	}
	set_task(1073741824, "chMap", "1.00", var1, var2 + 1, {0}, "1.00");
	return 1;
}

public cmdModules(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 1))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	new var8 = 0;
	format(var6, "", "%L", _arg0, "NAME");
	format(var7, "", "%L", _arg0, "VERSION");
	format(var8, "", "%L", _arg0, "AUTHOR");
	new var9;
	var9 = get_modulesnum();
	console_print(_arg0, "%L:", _arg0, "LOADED_MODULES");
	console_print(_arg0, "%-23.22s %-8.7s %-20.19s", var6, var7, var8);
	new var10 = 0;
	while (var10 < var9)
	{
		get_module(var10, var1, "", var3, "", var2, "", var4);
		switch (var4)
		{
			case 3:
			{
				copy(var5, 15, "running");
			}
			default:
			{
				copy(var5, 15, "error");
			}
		}
		console_print(_arg0, "%-23.22s %-8.7s %-20.19s", var1, var2, var3);
		var10++;
	}
	console_print(_arg0, "%L", _arg0, "NUM_MODULES", var9);
	return 1;
}

public cmdNick(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, ""))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	read_argv(1, var1, "");
	read_argv(2, var2, "");
	new var7;
	var7 = sub_6d4(_arg0, var1, 1);
	if (!var7)
	{
		return 1;
	}
	get_user_authid(_arg0, var3, "");
	get_user_name(_arg0, var4, "");
	get_user_authid(var7, var5, "");
	get_user_name(var7, var6, "");
	client_cmd(var7, "name \"%s\"", var2);
	log_amx("Cmd: \"%s<%d><%s><>\" change nick to \"%s\" \"%s<%d><%s><>\"", var4, get_user_userid(_arg0), var3, var2, var6, get_user_userid(var7), var5);
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_NICK_1", var6, var2);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_NICK_2", var4, var6, var2);
		}
		default:
		{
		}
	}
	console_print(_arg0, "[AMXX] %L", _arg0, "CHANGED_NICK", var6, var2);
	return 1;
}

public cmdPause(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 1))
	{
		return 1;
	}
	new var4 = 0;
	new var5 = 0;
	new var6;
	var6 = _arg0;
	get_user_authid(_arg0, var4, "");
	get_user_name(_arg0, var5, "");
	g_vara50 = get_cvar_float("pausable");
	if (!var6)
	{
		var6 = find_player(15852);
	}
	if (!var6)
	{
		console_print(_arg0, "[AMXX] %L", _arg0, "UNABLE_PAUSE");
		return 1;
	}
	set_cvar_float("pausable", 1065353216);
	client_cmd(var6, "pause;pauseAck");
	new var1;
	if (g_vara54)
	{
		var1 = 16168;
	}
	else
	{
		var1 = 16200;
	}
	log_amx("Cmd: \"%s<%d><%s><>\" %s server", var5, get_user_userid(_arg0), var4, var1);
	new var7 = 0;
	new var2;
	if (g_vara54)
	{
		var2 = 16236;
	}
	else
	{
		var2 = 16276;
	}
	format(var7, 15, "%L", _arg0, var2);
	console_print(_arg0, "[AMXX] %L", _arg0, var7);
	new var8;
	var8 = get_cvar_num("amx_show_activity");
	if (var8 != 0)
	{
		new var9 = 0;
		new var10 = 0;
		new var11 = 0;
		new var12 = 0;
		get_players(var9, var10, 16420, 9596);
		new var13 = 0;
		while (var13 < var10)
		{
			var12 = format(var11, 127, "%L", var9[var13], "ADMIN");
			if (var8 == 1)
			{
				var12 = copy(var11[var12], 127 - var12, 16464) + var12;
			}
			else
			{
				var12 = format(var11[var12], 127 - var12, " %s: ", var5) + var12;
			}
			new var3;
			if (g_vara54)
			{
				var3 = 16508;
			}
			else
			{
				var3 = 16540;
			}
			format(var11[var12], 127 - var12, "%L", var9[var13], var3);
			client_print(var9[var13], "", "%s server", var11);
			var13++;
		}
	}
	g_vara4c = _arg0;
	return 1;
}

public cmdPlugins(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 1))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	new var8 = 0;
	new var9 = 0;
	new var10 = 0;
	format(var6, "", "%L", _arg0, "NAME");
	format(var7, "", "%L", _arg0, "VERSION");
	format(var8, "", "%L", _arg0, "AUTHOR");
	format(var9, "", "%L", _arg0, "FILE");
	format(var10, "", "%L", _arg0, "STATUS");
	new var11;
	var11 = get_pluginsnum();
	new var12 = 0;
	console_print(_arg0, "%L:", _arg0, "LOADED_PLUGINS");
	console_print(_arg0, "%-18.17s %-8.7s %-17.16s %-16.15s %-9.8s", var6, var7, var8, var9, var10);
	new var13 = 0;
	while (var13 < var11)
	{
		get_plugin(var13, var4, "", var1, "", var2, "", var3, "", var5, "");
		console_print(_arg0, "%-18.17s %-8.7s %-17.16s %-16.15s %-9.8s", var1, var2, var3, var4, var5);
		if (equal(var5, "running", "1.00"))
		{
			var12++;
		}
		var13++;
	}
	console_print(_arg0, "%L", _arg0, "PLUGINS_RUN", var11, var12);
	return 1;
}

public cmdRcon(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	read_args(var1, 127);
	get_user_authid(_arg0, var2, "");
	get_user_name(_arg0, var3, "");
	log_amx("Cmd: \"%s<%d><%s><>\" server console (cmdline \"%s\")", var3, get_user_userid(_arg0), var2, var1);
	console_print(_arg0, "[AMXX] %L", _arg0, "COM_SENT_SERVER", var1);
	server_cmd(var1);
	return 1;
}

public cmdSlap(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var1 = 0;
	read_argv(1, var1, "");
	new var2;
	var2 = sub_6d4(_arg0, var1, 5);
	if (!var2)
	{
		return 1;
	}
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	read_argv(2, var3, "");
	new var8;
	var8 = str_to_num(var3);
	user_slap(var2, var8, 1);
	get_user_authid(_arg0, var4, "");
	get_user_name(_arg0, var7, "");
	get_user_authid(var2, var6, "");
	get_user_name(var2, var5, "");
	log_amx("Cmd: \"%s<%d><%s><>\" slap with %d damage \"%s<%d><%s><>\"", var7, get_user_userid(_arg0), var4, var8, var5, get_user_userid(var2), var6);
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_SLAP_1", var5, var8);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_SLAP_2", var7, var5, var8);
		}
		default:
		{
		}
	}
	console_print(_arg0, "[AMXX] %L", _arg0, "CLIENT_SLAPED", var5, var8);
	return 1;
}

public cmdSlay(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var1 = 0;
	read_argv(1, var1, "");
	new var2;
	var2 = sub_6d4(_arg0, var1, 5);
	if (!var2)
	{
		return 1;
	}
	user_kill(var2, "1.00");
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	get_user_authid(_arg0, var3, "");
	get_user_name(_arg0, var6, "");
	get_user_authid(var2, var5, "");
	get_user_name(var2, var4, "");
	log_amx("Cmd: \"%s<%d><%s><>\" slay \"%s<%d><%s><>\"", var6, get_user_userid(_arg0), var3, var4, get_user_userid(var2), var5);
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_SLAY_1", var4);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_SLAY_2", var6, var4);
		}
		default:
		{
		}
	}
	console_print(_arg0, "[AMXX] %L", _arg0, "CLIENT_SLAYED", var4);
	return 1;
}

public cmdUnban(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 2))
	{
		return 1;
	}
	new var1 = 0;
	new var2 = 0;
	new var3 = 0;
	read_argv(1, var1, "");
	if (contain(var1, 6996) != -1)
	{
		server_cmd("removeip \"%s\";writeip", var1);
		console_print(_arg0, "[AMXX] %L", _arg0, "IP_REMOVED", var1);
	}
	else
	{
		server_cmd("removeid \"%s\";writeid", var1);
		console_print(_arg0, "[AMXX] %L", _arg0, "AUTHID_REMOVED", var1);
	}
	get_user_name(_arg0, var3, "");
	switch (get_cvar_num("amx_show_activity"))
	{
		case 1:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_UNBAN_1", var1);
		}
		case 2:
		{
			client_print("1.00", "", "%L", -1, "ADMIN_UNBAN_2", var3, var1);
		}
		default:
		{
		}
	}
	get_user_authid(_arg0, var2, "");
	log_amx("Cmd: \"%s<%d><%s><>\" unban \"%s\"", var3, get_user_userid(_arg0), var2, var1);
	return 1;
}

public cmdWho(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 1))
	{
		return 1;
	}
	new var2 = 0;
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	new var8 = 0;
	new var9 = 0;
	new var10 = 0;
	new var11 = 0;
	new var12 = 0;
	new var13 = 0;
	format(var9, 15, "%L", _arg0, "IMMU");
	format(var10, 15, "%L", _arg0, "RESERV");
	format(var11, 15, "%L", _arg0, "ACCESS");
	format(var12, 15, "%s", "YES");
	format(var13, 15, "%s", "NO");
	get_players(var2, var3, 17072, 9596);
	format(var4, 63, "AMX_WHO for dcoo.com, Author: CRaZy");
	console_print(_arg0, "%s\n # %-32s %-22s %-4s %-4s %-8s %-4s %-4s %s", var4, "name", "userip", "frag", "death", "userid", var9, var10, var11);
	new var14 = 0;
	new var15 = 0;
	while (var15 < var3)
	{
		get_user_authid(var2[var15], _unused_temp_, "");
		get_user_ip(var2[var15], var8, "", "1.00");
		get_user_name(var2[var15], var5, "");
		var6 = get_user_flags(var2[var15], "1.00");
		get_flags(var6, var7, "");
		var14 = get_user_flags(var2[var15], "");
		new var1;
		if (var6 & 2)
		{
			var1 = var12;
		}
		else
		{
			var1 = var13;
		}
		console_print(_arg0, "%2d %-32s %-22s %4d %4d %8d %2d %-4s %s", var2[var15], var5, var8, get_user_frags(var2[var15]), get_user_deaths(var2[var15]), get_user_userid(var2[var15]), var14, var1, var7);
		var15++;
	}
	console_print(_arg0, "TOTAL_NUM:%d", var3);
	return 1;
}

public cmdWho1(_arg0, _arg1, _arg2)
{
	if (!sub_230(_arg0, _arg1, _arg2, 1))
	{
		return 1;
	}
	new var3 = 0;
	new var4 = 0;
	new var5 = 0;
	new var6 = 0;
	new var7 = 0;
	new var8 = 0;
	new var9 = 0;
	new var10 = 0;
	new var11 = 0;
	new var12 = 0;
	new var13 = 0;
	new var14 = 0;
	format(var10, 15, "%L", _arg0, "IMMU");
	format(var11, 15, "%L", _arg0, "RESERV");
	format(var12, 15, "%L", _arg0, "ACCESS");
	format(var13, 15, "%s", "YES");
	format(var14, 15, "%s", "NO");
	get_players(var3, var4, 17072, 9596);
	format(var5, 63, "AMX_WHO for dcoo.com, Author: CRaZy");
	console_print(_arg0, "%s\n#\x09%s\x09%s\x09%s\x09%s\x09%s\x09%s\x09%s\x09%s", var5, "name", "userip", "frag", "death", "userid", var10, var11, var12);
	new var15 = 0;
	new var16 = 0;
	while (var16 < var4)
	{
		get_user_authid(var3[var16], _unused_temp_, "");
		get_user_ip(var3[var16], var9, "", "1.00");
		get_user_name(var3[var16], var6, "");
		var7 = get_user_flags(var3[var16], "1.00");
		get_flags(var7, var8, "");
		var15 = get_user_flags(var3[var16], "");
		new var1;
		if (var7 & 2)
		{
			var1 = var13;
		}
		else
		{
			var1 = var14;
		}
		new var2;
		if (var15)
		{
			var2 = var13;
		}
		else
		{
			var2 = var14;
		}
		console_print(_arg0, "%d\x09\"%s\"\x09%s\x09%d\x09%d\x09%d\x09%s\x09%s\x09%s", var3[var16], var6, var9, get_user_frags(var3[var16]), get_user_deaths(var3[var16]), get_user_userid(var3[var16]), var2, var1, var8);
		var16++;
	}
	console_print(_arg0, "TOTAL_NUM:%d", var4);
	return 1;
}

public plugin_cfg()
{
	server_cmd("amx_cvar add %s", "rcon_password");
	server_cmd("amx_cvar add %s", "amx_show_activity");
	server_cmd("amx_cvar add %s", "amx_mode");
	server_cmd("amx_cvar add %s", "amx_password_field");
	server_cmd("amx_cvar add %s", "amx_default_access");
	server_cmd("amx_cvar add %s", "amx_reserved_slots");
	server_cmd("amx_cvar add %s", "amx_reservation");
	server_cmd("amx_cvar add %s", "amx_conmotd_file");
	return 0;
}

public plugin_init()
{
	register_plugin("Admin Commands", "1.00", "AMXX Dev Team");
	register_dictionary("admincmd.txt");
	register_dictionary("common.txt");
	register_concmd("amx_kick", "cmdKick", 4, "<name or #userid> [reason]");
	register_concmd("amx_ban", "cmdBan", 8, "<name or #userid> <minutes> [reason]");
	register_concmd("amx_banip", "cmdBanIP", 8, "<name or #userid> <minutes> [reason]");
	register_concmd("amx_addban", "cmdAddBan", 8, "<authid or ip> <minutes> [reason]");
	register_concmd("amx_unban", "cmdUnban", 8, "<authid or ip>");
	register_concmd("amx_slay", "cmdSlay", 16, "<name or #userid>");
	register_concmd("amx_slap", "cmdSlap", 16, "<name or #userid> [power]");
	register_concmd("amx_leave", "cmdLeave", 4, "<tag> [tag] [tag] [tag]");
	register_concmd("amx_pause", "cmdPause", 64, "- pause or unpause the game");
	register_concmd("amx_who", "cmdWho", 16777216, "- displays who is on server");
	register_concmd("amx_who1", "cmdWho1", 16777216, "- displays who is on server");
	register_concmd("amx_cvar", "cmdCvar", 64, "<cvar> [value]");
	register_concmd("amx_plugins", "cmdPlugins", 16777216, {0});
	register_concmd("amx_modules", "cmdModules", 16777216, {0});
	register_concmd("amx_map", "cmdMap", "NO_ACC_COM", "<mapname>");
	register_concmd("amx_cfg", "cmdCfg", 128, "<fliename>");
	register_concmd("amx_nick", "cmdNick", 16, "<name or #userid> <new nick>");
	register_clcmd("amx_rcon", "cmdRcon", 2048, "<command line>");
	register_clcmd("pauseAck", "cmdLBack", -1, {0});
	return 0;
}

sub_230(_arg0, _arg1, _arg2, _arg3)
{
	new var2 = 0;
	new var1;
	if (is_dedicated_server())
	{
		var1 = 0;
	}
	else
	{
		var1 = 1;
	}
	if (var1 == _arg0)
	{
		var2 = 1;
	}
	else
	{
		if (_arg1 == 16777216)
		{
			if (sub_150(_arg0))
			{
				var2 = 1;
			}
		}
		if (_arg1 & get_user_flags(_arg0, "1.00"))
		{
			var2 = 1;
		}
		if (_arg1 == 0)
		{
			var2 = 1;
		}
	}
	if (var2 == 0)
	{
		console_print(_arg0, "%L", _arg0, "NO_ACC_COM");
		return 0;
	}
	if (_arg3 > read_argc())
	{
		new var3 = 0;
		new var4 = 0;
		get_concmd(_arg2, var3, "", _unused_temp_, var4, 127, _arg1, -1);
		console_print(_arg0, "%L:  %s %s", _arg0, "USAGE", var3, var4);
		return 0;
	}
	return 1;
}


/* ERROR! null */
 function "sub_6d4" (number 23)

sub_602c(_arg0)
{
	new var1 = 0;
	while (var1 < g_vara48)
	{
		if (equal(520[var1], _arg0, "1.00"))
		{
			return 1;
		}
		var1++;
	}
	return 0;
}

sub_9e70(_arg0, _arg1, _arg2)
{
	new var1 = 0;
	while (var1 < _arg2)
	{
		if (contain(_arg0, _arg1[var1]) != -1)
		{
			return var1;
		}
		var1++;
	}
	return -1;
}

sub_150(_arg0)
{
	new var1;
	return get_user_flags(_arg0, "1.00") > 0 && !get_user_flags(_arg0, "1.00") & 33554432;
}

